{"version":3,"sources":["components/Person.js","components/PersonForm.js","components/Button.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Person","person","deleteButton","className","name","number","onClick","PersonForm","newName","newNumber","handleNameChange","handleNumberChange","style","paddingLeft","paddingTop","paddingBottom","borderStyle","borderRadius","margin","value","onChange","Button","button","text","type","axios","get","then","response","data","newObject","post","id","delUrl","window","confirm","delete","Notification","message","App","useState","persons","setPersons","setNewName","setNewNumber","addMessage","setAddMessage","useEffect","personService","initialPersons","onSubmit","event","preventDefault","personObject","map","includes","alert","returnedPerson","concat","setTimeout","target","i","key","ReactDOM","render","document","getElementById"],"mappings":"mNAWeA,EATA,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,aAEtB,OACI,wBAAIC,UAAU,eACTF,EAAOG,KADZ,IACmBH,EAAOI,OACtB,4BAAQC,QAASJ,GAAjB,YCsBGK,EA3BI,SAAC,GAAkE,IAAhEC,EAA+D,EAA/DA,QAASC,EAAsD,EAAtDA,UAAWC,EAA2C,EAA3CA,iBAAkBC,EAAyB,EAAzBA,mBAYxD,OACA,yBAAKC,MAXY,CACbC,YAAa,GACbC,WAAY,GACZC,cAAe,GACfC,YAAa,SACbC,aAAc,EACdC,OAAQ,KAKZ,WACQ,2BACEC,MAAOX,EACPY,SAAUV,IAEpB,6BALA,WAMQ,2BACES,MAAOV,EACPW,SAAUT,MCbTU,EARA,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,KACtB,OACI,6BACE,4BAAQC,KAAMF,GAASC,K,gBCelB,EAhBA,WAEX,OADgBE,IAAMC,IAHV,iBAIGC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,SAc5B,EAXA,SAAAC,GAEX,OADgBL,IAAMM,KARV,gBAQwBD,GACrBH,MAAK,SAAAC,GAAQ,OAAEA,EAASC,SAS5B,EANM,SAACG,EAAI5B,GACtB,IAAM6B,EAAM,uBAAmBD,IACU,IAArCE,OAAOC,QAAP,iBAAyB/B,KAC7BqB,IAAMW,OAAOH,ICHFI,EAZM,SAAC,GAAgB,IAAdC,EAAa,EAAbA,QACpB,OAAgB,OAAZA,EACO,KAIP,yBAAKnC,UAAU,kBACVmC,IC4FEC,EA9FH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACRC,EADQ,KACCC,EADD,OAEgBF,mBAAS,IAFzB,mBAERhC,EAFQ,KAECmC,EAFD,OAGoBH,mBAAS,IAH7B,mBAGR/B,EAHQ,KAGGmC,EAHH,OAIsBJ,mBAAS,MAJ/B,mBAIRK,EAJQ,KAIIC,EAJJ,KAOhBC,qBAAU,WACPC,IAECrB,MAAK,SAAAsB,GACJP,EAAWO,QAEb,IAsDH,OACE,6BACE,yCACA,kBAAC,EAAD,CAAcX,QAASO,IACtB,yCACD,0BAAMK,SAxDS,SAACC,GAChBA,EAAMC,iBACN,IAAMC,EAAe,CACjBjD,KAAMI,EACNH,OAAQI,GAGZgC,EAAQa,KAAI,SAAArD,GAAM,OAAEA,EAAOG,QAAMmD,SAAS/C,GACzCgD,MAAM,GAAD,OAAIhD,EAAJ,mCACLwC,EACOK,GACP1B,MAAK,SAAA8B,GACJf,EAAWD,EAAQiB,OAAOD,IAC1BE,YAAW,WACTb,EAAc,QACb,KACHA,EAAc,GAAD,OAAIO,EAAajD,KAAjB,+BACbuC,EAAW,IACXC,EAAa,SAuCf,kBAAC,EAAD,CAAYpC,QAASA,EAASE,iBAlCT,SAACyC,GACtBR,EAAWQ,EAAMS,OAAOzC,QAkCZV,UAAWA,EAAWE,mBAhCX,SAACwC,GAC1BP,EAAaO,EAAMS,OAAOzC,UAiCxB,kBAAC,EAAD,CAAQG,OAAQ,SAAUC,KAAM,SAEhC,uCACA,4BACCkB,EAAQa,KAAK,SAACrD,EAAQ4D,GAAT,OACd,kBAAC,EAAD,CACQC,IAAKD,EACL5D,OAAQA,EACRC,aACE,kBAAI8C,EAA2B/C,EAAO+B,GAAI/B,EAAOG,e,MCnFjE2D,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f6c9430a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Person = ({ person, deleteButton }) =>{\r\n     \r\n    return(\r\n        <li className='contactInfo'>\r\n            {person.name} {person.number}\r\n            <button onClick={deleteButton}>delete</button>\r\n        </li>)\r\n}\r\n\r\nexport default Person","import React from 'react'\r\n\r\nconst PersonForm = ({ newName, newNumber, handleNameChange, handleNumberChange }) => {\r\n    //try out inline styling\r\n    const formStyle ={\r\n        paddingLeft: 20,\r\n        paddingTop: 20,\r\n        paddingBottom: 20,\r\n        borderStyle: 'groove',\r\n        borderRadius: 5,\r\n        margin: 15, \r\n    }\r\n\r\n\r\n    return(\r\n    <div style={formStyle}>\r\n    name:   <input \r\n              value={newName}  \r\n              onChange={handleNameChange}   \r\n          /> \r\n    <br></br>\r\n    number: <input \r\n              value={newNumber}\r\n              onChange={handleNumberChange}   \r\n          />\r\n    </div>\r\n        )\r\n    }\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Button = ({ button, text }) =>{\r\n    return(\r\n        <div>\r\n          <button type={button}>{text}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons/'\r\n\r\nconst getAll = () =>{\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response=>response.data)\r\n}\r\n\r\nconst create = newObject =>{\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response=>response.data)\r\n}\r\n\r\nconst deletePerson = (id, name) =>{\r\n    const delUrl = `/api/persons/${id}`\r\n    if (window.confirm(`Delete ${name}`) === true){\r\n    axios.delete(delUrl)} \r\n    }\r\n\r\nexport default { getAll, create, deletePerson }","import React from 'react'\r\n\r\nconst Notification = ({ message }) =>{\r\n    if (message === null){\r\n        return null\r\n    }\r\n\r\n    return(\r\n        <div className='addNotificaion'>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport Person from './components/Person'\r\nimport PersonForm from './components/PersonForm'\r\nimport Button from './components/Button'\r\nimport personService from './services/persons'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ addMessage, setAddMessage ] = useState(null)\r\n  //const [ searchName, setSearchName ] = useState('')\r\n\r\n  useEffect(()=>{\r\n     personService\r\n     .getAll()\r\n     .then(initialPersons=>{\r\n       setPersons(initialPersons) \r\n     })\r\n  }, [])\r\n\r\n  \r\n  const addContact = (event) =>{\r\n      event.preventDefault()\r\n      const personObject = {\r\n          name: newName,\r\n          number: newNumber,\r\n      }\r\n      //Check and see if there is duplicate name in the phonebook\r\n      persons.map(person=>person.name).includes(newName)  \r\n      ?alert(`${newName} is already added to phonebook`)  \r\n      :personService\r\n      .create(personObject)\r\n      .then(returnedPerson=>{\r\n        setPersons(persons.concat(returnedPerson))\r\n        setTimeout(() => {\r\n          setAddMessage(null)\r\n        }, 3000);\r\n        setAddMessage(`${personObject.name} added to the contact list`)\r\n        setNewName('')\r\n        setNewNumber('')\r\n      })\r\n\r\n  }\r\n  \r\n  const handleNameChange = (event) =>{\r\n      setNewName(event.target.value)\r\n  }\r\n  const handleNumberChange = (event) =>{\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n\r\n//Unfinished Search Function\r\n/*\r\nconst filterName = (arr, query) =>{\r\n  return arr.filter(el => el.toLowerCase().indexOf(query.toLowerCase()) !==-1)\r\n}\r\n\r\nconst handleNameFilter = (event) =>{\r\n  setSearchName(event.target.value)\r\n  //const result = persons.includes(person => person.name === searchName)\r\n  //console.log(result)\r\n}\r\nconst filterPerson = filterName(persons.map(person=>person.name), searchName) \r\n<div>\r\nfilter shown with<input\r\n                  value={searchName}\r\n                  onChange={handleNameFilter}  \r\n                  />\r\n</div>\r\n*/\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <Notification message={addMessage} />\r\n       <h2>Add a new</h2>\r\n      <form onSubmit={addContact}>\r\n      <PersonForm newName={newName} handleNameChange={handleNameChange}\r\n                  newNumber={newNumber} handleNumberChange={handleNumberChange}\r\n        />\r\n      <Button button={'submit'} text={'add'}/>\r\n      </form>\r\n      <h2>Numbers</h2>\r\n      <ul>\r\n      {persons.map( (person, i)=> \r\n      <Person \r\n              key={i}\r\n              person={person} \r\n              deleteButton={\r\n                ()=>personService.deletePerson(person.id, person.name)\r\n              } \r\n              />\r\n      )}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}